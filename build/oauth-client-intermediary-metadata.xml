<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.12 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6749 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY RFC7159 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml">
<!ENTITY RFC7591 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7591.xml">
<!ENTITY RFC7592 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7592.xml">
]>

<?rfc roc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-parecki-oauth-client-intermediary-metadata-03" category="std">

  <front>
    <title>OAuth 2.0 Client Intermediary Metadata</title>

    <author initials="A." surname="Parecki" fullname="Aaron Parecki">
      <organization>Okta</organization>
      <address>
        <email>aaron@parecki.com</email>
        <uri>https://aaronparecki.com</uri>
      </address>
    </author>

    <date year="2021" month="February" day="22"/>

    <area>Security Area</area>
    <workgroup>Open Authentication Protocol</workgroup>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines a mechanism for including information about
additional parties involved in an OAuth transaction by adding a new section
to the OAuth 2.0 Dynamic Client Registration request, as well as requires that
authorization servers surface this information to users during an OAuth transaction.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>In some applications of OAuth, there may be multiple legal entities which have access
to or process data retrieved by an OAuth client. In the traditional OAuth model,
a <spanx style="verb">client_id</spanx> represents only a single application, and so the OAuth consent screen
lists just one third party: the OAuth client.</t>

<t>In this situation, in order to comply with various local laws and regulations,
the user needs to be informed by the authorization server of the list of entities
that will have access to their data after authorizing the client.</t>

<t>The existing Dynamic Client Registration (<xref target="RFC7591"/>) specification lacks a mechanism
for communicating a list of additional parties that may have access to the user's data.</t>

<t>This specification extends <xref target="RFC7591"/> and <xref target="RFC7592"/> to define a mechanism for including information about the additional parties involved in an OAuth transaction by including information about the additional intermediaries into the Dynamic Client Registration request. This specification also defines requirements of the OAuth authorization server to present this information about the additional parties in the OAuth consent screen during an OAuth transaction.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

<t>Unless otherwise noted, all the protocol parameter names and values
are case sensitive.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>In addition to the terms defined in referenced specifications, this document uses
the following terms:</t>

<t><list style="hanging">
  <t hangText='&quot;OAuth&quot;:'>
  In this document, "OAuth" refers to OAuth 2.0, <xref target="RFC6749"/>.</t>
  <t hangText='&quot;Client&quot;:'>
  "Client" has the same definition as in OAuth 2.0, but is worth pointing out
that the client in this context may be operated by a different legal entity than is
described by the client name.</t>
  <t hangText='&quot;Intermediary&quot;:'>
  One or more entities that the user's data will pass through or be shared with by
using the OAuth client. This information is voluntarily provided by the OAuth
client, and is typically enforced by a business relationship between the organization
providing the Client and the organization providing the Resource Server.</t>
</list></t>

</section>
<section anchor="client-intermediary-metadata" title="Client Intermediary Metadata">

<t>Registered client intermediaries have a set of metadata values
associated with the client identifier of the client that represents them in the OAuth transaction,
such as a user-visible name, logo, and URL.</t>

<t>Like the OAuth client metadata defined in <xref target="RFC7591"/> and <xref target="RFC7592"/>, these metadata
values are used in the following ways:</t>

<t><list style="symbols">
  <t>as input values to registration and update requests, and</t>
  <t>as output values in registration responses.</t>
</list></t>

<t>These values are used by the authorization server when displaying the OAuth consent
screen to the end user, to inform them of all the additional parties that will be handling
the user's data upon approval.</t>

<t>The following metadata fields are defined by this specification. The implementation and use of
the fields is OPTIONAL unless stated otherwise. All data member types (strings, arrays, numbers)
are defined in terms of their JSON (<xref target="RFC7159"/>) representations.</t>

<t>Some fields are expected to be displayed in the OAuth consent UI and are designated accordingly.</t>

<t><spanx style="verb">intermediary_name</spanx></t>

<t>REQUIRED. A human-readable name of intermediary party. Authorization servers MUST display this field to the end user on the OAuth consent screen.</t>

<t><spanx style="verb">description</spanx></t>

<t>OPTIONAL. A human-readable description of the intermediary. This is not intended to be displayed in the OAuth consent screen.</t>

<t><spanx style="verb">intermediaty_uri</spanx></t>

<t>A URL string of a web page providing information about the intermediary. If present, the authorization server SHOULD display this URL to the end user in a clickable fashion. It is RECOMMENDED that clients always send this field. The value of this field MUST point to a valid web page.</t>

<t><spanx style="verb">logo_uri</spanx></t>

<t>A URL string that references a logo for this intermediary. If present, the authorization server SHOULD display this image to the end user in the OAuth consent screen. The value of this field MUST be a valid image file.</t>

<t><spanx style="verb">contacts</spanx></t>

<t>Array of strings representing ways to contact people responsible for this intermediary, typically email addresses or phone numbers. The authorization server MAY display these to the end user in the OAuth consent screen. See Section 6 of <xref target="RFC7591"/> for information on Privacy Considerations.</t>

</section>
<section anchor="client-registration-endpoint" title="Client Registration Endpoint">

<t>The client registration endpoint is described in Section 3 of <xref target="RFC7591"/>.</t>

<t>Since this specification provides a mechanism for a client to assert information about additional parties other than itself, the registration endpoint MUST be protected by an OAuth 2.0 access token obtained by the client. The method by which the initial access token is obtained by the client or developer is out of scope of this specification, but is likely to be obtained using the client credentials grant or manual out-of-band registration.</t>

<section anchor="client-registration-request" title="Client Registration Request">

<t>This specification extends the client registration request defined in <xref target="RFC7591"/>.</t>

<t>This operation registers a combination of client and one or more intermediaries with an authorization server. The authorization server assigns a unique client identifier (and optionally a client secret) that represents the combination of all the entities described in the registration request.</t>

<t>To register, the client or developer sends an HTTP POST as described in Section 3.1 of <xref target="RFC7591"/>, with an additional property named "intermediaries" with a JSON array of objects of each intermediary's registration information.</t>

<t>For example, the client could send the following registration request to the client registration endpoint using its OAuth 2.0 access token it has previously obtained using the client credentials grant.</t>

<t>The following is a non-normative example request:</t>

<figure><artwork><![CDATA[
    POST /register HTTP/1.1
    Content-Type: application/json
    Accept: application/json
    Host: server.example.com
    Authorization: Bearer 8IGFGXKXZBV5LL38Y3X1

    {
      "client_name": "User-Recognizable App Name",
      "redirect_uris": [
        "https://client.example.org/callback"
      ],
      "client_uri": "https://example.net/",
      "logo_uri": "https://example.net/logo.png",
      "contacts": [
        "support@example.net"
      ],
      "intermediaries": [
        {
          "name": "Partner App Name",
          "description": "An application that may also receive
            this user's data when the user authorizes the client",
          "uri": "https://partner.example/",
          "logo_uri": "https://partner.example/logo.png",
          "contacts": [
            "support@partner.example"
          ]
        }
      ]
    }
]]></artwork></figure>

</section>
<section anchor="client-registration-response" title="Client Registration Response">

<t>This specification extends the client information response defined in <xref target="RFC7591"/> and <xref target="RFC7592"/>.</t>

<t>Upon a successful registration request, the authorization server returns a client identifier for the combination of the client and any intermediaries specified in the request.</t>

<t>In addition to the response fields defined in Section 3.2 of <xref target="RFC7591"/> and Section 3 of <xref target="RFC7592"/>, the response MUST also contain all registered metadata about the intermediaries. The authorization server MAY reject or replace any of the requested metadata values submitted during the registration and substitute them with suitable values.</t>

<t>The following is a non-normative example response of a successful registration:</t>

<figure><artwork><![CDATA[
    HTTP/1.1 201 Created
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {
      "client_id": "V8tvEkZWhDAdxSaKGUJZ",
      "client_secret": "SpsuwZIxnp8bBEhp5sk1EKiIKTZ4X4DKU",
      "grant_types": ["authorization_code", "refresh_token"],
      "token_endpoint_auth_method": "client_secret_basic",
      "registration_client_uri": "https://server.example.com/client/tmzaAMkyWlH3",
      "registration_access_token": "MphaAqDaZT86C93ENWRZcf3dfU2dW6POASo8dFXa",
      "client_name": "User-Recognizable App Name",
      "client_uri": "https://example.net/",
      "redirect_uris": [
        "https://client.example.org/callback"
      ],
      "contacts": [
        "support@example.net"
      ],
      "intermediaries": [
        {
          "name": "Partner App Name",
          "description": "An application that may also receive
            this user's data when the user authorizes the client",
          "uri": "https://partner.example/",
          "logo_uri": "https://partner.example/logo.png",
          "contacts": [
            "support@partner.example"
          ]
        }
      ]
    }
]]></artwork></figure>

<t>The <spanx style="verb">registration_client_uri</spanx> and <spanx style="verb">registration_access_token</spanx> properties are required in order to support updating and deleting this client as described in <xref target="RFC7592"/>.</t>

</section>
<section anchor="client-read-request" title="Client Read Request">

<t>This specification extends the client read request defined in <xref target="RFC7592"/> to include the additional metadata properties in the response that describe the intermediaries. No additional behavior is prescribed by this specification.</t>

</section>
<section anchor="client-update-request" title="Client Update Request">

<t>This specification extends the client update request defined in <xref target="RFC7592"/> to be able to update the additional metadata properties that describe the intermediaries.</t>

<t>The additional properties are provided in the update request in the same format as in the initial registration request.</t>

<t>Since these values were asserted by the client in the initial registration, there is no need to prescribe any additional security model around the ability to update them, even though these represent additional parties.</t>

</section>
<section anchor="client-delete-request" title="Client Delete Request">

<t>No new behavior is prescribed for delete requests beyond that defined in <xref target="RFC7592"/>.</t>

</section>
</section>
<section anchor="providing-intermediaty-details-in-the-authorization-request" title="Providing Intermediaty Details in the Authorization Request">

<t>When the authorization server begins a request from an OAuth client identifier that has been registered with additional intermediary information, it MUST display the additional parties in the consent UI visible to the end user.</t>

<t>The authorization server chooses how best to display the additional information, but it MUST include at least the name of the intermediaries and client, and SHOULD include the logo of each as well.</t>

</section>
<section anchor="security-considerations" title="Security Considerations">

<t>As this extends <xref target="RFC7591"/>, all security considerations from that draft apply here as well.</t>

<t>Specifically, if the authorization server supports open client registration without any authentication, it must be extremely careful with any URLs received in the registration request such as <spanx style="verb">logo_uri</spanx>, <spanx style="verb">tos_uri</spanx>, and <spanx style="verb">uri</spanx>, as these values may be displayed to end users. <xref target="RFC7591"/> recommends requiring that these URIs have a matching host and scheme as the defined <spanx style="verb">redirect_uri</spanx>s, and that they are resolvable URIs. See section 5 of <xref target="RFC7591"/> for more details.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The author would like to thank Ryan Christiansen and Preston McFarland for their initial contributions of the concepts behind this specification. The author would also like to thank Don Cardinal, Ryan Christiansen and Preston McFarland for their reviews of this specification, as well as Anil Mahalaha and other members of the Financial Data Exchange working group. Additionally the work of the OAuth Working Group on the referenced and related specifications that this specification builds upon is much appreciated.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC6749;
&RFC7159;
&RFC7591;
&RFC7592;


    </references>




  </back>

<!-- ##markdown-source:
H4sIAHH9M2AAA+1aa3PbuNX+zl+BUT90tyPZsbPZZjXTmWptZ9dNbKe+NGne
6dgQCVlYUwRLkHbUTP57n3MAUKBEKUmn77d6JhNSxOXcz3MOMBqNklrXuRqL
i0lTz8Xh3jNxlGtV1OK0qFW1UJmW1VKcqVpmspZJZtJCLjA+q+SsHpWyUumD
HhmJ2aOUZ450NHO08DNHz54n+B8zD58dHoyeHY4OD5NEl9VY1FVj68Nnz356
dphgPemJSR6exo6KQtWjY9ovSWU9FrbOkiQ1mS7ux6KxI2lTrZNSjxMhKpOO
xVJZPFpT1ZWa2fZ9uVi9JkSwqWjKCP+E0AW+TPbEW8cR/+Y4ncjKFJ3fTYWN
Lx4gDnpTC6nzsZA07M9eIHupWfDHptJjMa/r0o7393lIPCIpTLWQtX5URMjl
q6PDg4Of/OOPf/whPP7x4EX7+OKng9Xj4ThJRqORkFNbVzKtk+R6rq2wpUr1
TENYGpRnaqYLZYUUC5XOZaHtQsxMBY7TvCEh4mnm6MBoOTVNncgs0/QqcwF6
a43pung0+aPK8CBk4e0FuxYWG9PM6VLQNKwnRaGehFX8e1IbUc9VZGDHSwhW
p8HQLtW9JvJ5kUr9s1G2HgppxZPKc/qfftMVSKjnsvaK0/9y462qHlUFlptq
JlOFIdp2+MHujaURGVRBtPWQvuekuNBZlqskgc1VJmscV59+p6PXz8mfoj8a
CjNbKCHLMvfytsLM3BZD4rtSYiGXYor/mrzWZa5Eru4hV7CuWbBPc53OxVw+
Ypk0VdaSxKCfEraMN0HeAxnUlVYkfhJz4ME53B68hEUMllq1uQELk6l8mEhx
54be6uwOa5WQJt5AapFjOWEhmbzDBRRQZOAtUl0K3khfNq2UKpIcSrPiN7gu
VmHBVxkby3IcT3IUsqRYN1bXjd8BhmSqTFWkI3hDCVKeNOY8ykqbxorcpGAk
l0+WianUfZM7EQ8T2oH0CktTmaUVIGGndycjGtBnKqQd+kbk03NQQ0LGhf1h
cpEqhDNeXTktIARhhbAsmRMt1fJ4jRf1EQvTl11W/t2nT96XP3/+fs1dc5k+
dJw1IWeFfBZNwWPYwQL5PY7KjJDNbfLBIvu9M6m93mChPtaqgEAjAln44f0Q
71jLxZRvCSlOIf9ZWPmGZaPc41b3jH9FzNkTPfKQuTVtBPWBaOFcZxaZea+l
YWvvaJth6Qsy2ep2XwhjybmppV/tyBSPZN2Y34lacfwii31Q8Ds4ohWDs5ur
68HQ/S/OL/j58uSvN6eXJ8f0fPXr5M2b9sGNSPBycfPGf6en1cyji7Ozk/Nj
Nxm/irWfziZ/H3CkSQYXb69PL84nbwaOe4gLUKMhUQskzNbBoV3ItIa9IDFk
CkLRU2c8bKGUPz9/hiBuipzM3lAEftJWicJgEvaCf5NsEVxrkxqWObI8uTVl
exdpHmUOgyAsIlKJuZA/whayNEn4GvalC5Ob+2WynguCLoO7kS1abz5MJAAI
MkKR4q1jZ3a4xjMc1XKQm5k8N08camgxJPwBK34wTsbidE1UEKn76DZit2/z
7tCJiHAFi2jgfIEXCs+IGZYptxCGI9wxJNkqo7WmMF/sDMPBL6WBZohGwg7C
RaBVZGw1ClOuEWBCQjSlggf6lCYyPWPZ1HF+pDgOU9eE31ba9uHdr056I3Zi
wMpMXSBCISgtDPTYZtuWtigUurBfSoqT88o093OaBwrtHDaQuaw0XYKGxoag
303A1+v+jVfEtaaoEYeQ12Bujzpbke4ArvDzXbLFlHpZwiByTFC0VhpkM6V9
yZ4r5TPgXJcgsH6ikEALApIiDLv4g3XdfoFWH/Rok/WxayMvlTUN9hVXHMLI
3neWA/1xJXiEi7KKRNhaQic8uwwF/+JcFkqF1v+sNalmC2ENxBaVkUJnepXP
/QdWbwRw8GnRjadRwBwmtgH0kpRuyRxGj9rqKYAQmdQQ+OPeONXcXL6BKN7o
B7Wh+xXVkZvvyJ4MChFTwrTEMctBDjRkgdiV3z/JJbn9H5wPlvA7PwXOXcV5
jHZqSiqyQkqzLrjyVLhmNJdjUScH2pISjXUwBgSu07ULUz3NKTNpW+ZyueYg
LnslPnv5uKiIUswd0g/ObZymCNH4CL0N2bCvwjcRF7IcmyXrztyUJIuSDFvm
HpWtpNmqC8aTZ46/oDlmcR0CkHMj8wCecuKPRA0hmZkL0m4tTA1pTDQuAdma
7bfNQ3tiAvKZgIVaTAklLEuw9h00AfJIYVUFhQ9F0dBn+30SU0jGwTnFWT1w
6V+uLs4DnkSZSHiyNX8XKiCCK6pRIobVR3BIdLm06jW3Mr4u8rg5ZX4dHVbf
F8wSgCVAAxUOS+xwFxf9t+Q/d/B/Dx3AtJg3C1mMUN1nMngYMRFPc9UDBvdW
eIxJPKVOTczQukkJsx08EZ0ui5S0NCgM6uqhMBoYYkxMbIj5lpAFfymyrxXo
iprVivXyFsgOJE0o2ghnDuwPqIOnEM29imJ1P5Ts0nc6C/BzuN1zPWLryJX2
X5cqoXOKeOkDC2cmkYHIN04ZBUSwzjmpi40wtpyiFwGoLNKZcykOME60rTJZ
yYwmiALOBDprBUASo6DcJykf+D28oohOI7kq8eD7vyIbvSBF9Ehnq5Z38zpV
LZdu6ZnOmU/CSshSlvikiECTfYxYOXhID66C5gmiVIaaDD6gczrrFcIwRhvU
wqKIi1nIAdx9mFNV74OQY6JXSIDwkYQocXyTcK4UYQ1X6f1IPMap05WUK0un
NlylH2W6pOLGAgRUbYhL+iq7kyJjY/oCTrle4YdOUlR+Opl4p9YIFD9fo5hC
LYpV1ZNGAgTc7MPJFrvA4iH+qu5x755syDnF4+PaqnzmTLmfg2BsVPe40B/3
kagr1zYKHpCnzbSWq5SoIpzLyGVu+IvrXLnIA+pAW2cRiKB/HbKvTD2qnCoA
HtYwALQpfmi9pCO+tuDIAcJgsS7OtsuvcLnfAebFEBH1u7gH4uM9Ed8bEInd
RmY2mvqmUiutbVZ06cAU9Qi3/e3spdRbzMuDtC3AMfRnXJXkxjs4TSaUmsVU
FzJkp3SF8E1U9azBbUbRUHqfI+9wcRglkj6D5EKD5B4Q/h3vXDoL5ZaiH2MV
NFF/34fL13kIwK8t1Tout2HaoWsDMZlWNMOtVmZZFWD+1+vrt+LtBdxhvYPQ
evXewZpfD1eii/ywooVRohKWycSgK+yBn+IAmgwh3Ex/wy6M35SE88QR+fe2
y2EUBcDlK7CjPkrCoR0uU9MgmfgMGyPdXlvzwXlntHPOhJiyLTromvsEUOYj
NWqh729wxA1ErsmyClOM2sOQwGegGtWP8H+suP2gblbm/sHeQfv9iFoMRT26
Bqoexw3t/d8sV8bubwJ2ynrHgF+NpZMm5xqenPZQh1eIPWUsflaAx5V4efrL
q1/ev37/4ee/vXjz5vnLvz9/f7Ai/lP7JMTAN+TJeAZjMbih+vNSpeaeSnPK
2pOyFOf0dRhPgzh1BRMiDGQx8f+ij/gcjpp8wA6Uo+Tfp1Q/lenDIJrxj2EP
SViZKApLhTUKVe93aQlYbNto+r5XFvfdWQHZbBJvm7I0Vf3naI3txK652/pi
nzpvGB8E/Rbps4CqesXLIyPkTxMmRWwmq/Y6t4ahCgWLXVtCuAzWaTHNfaeG
MVGIsyrODpuUrMm2dKQHre5vTujTyPqsXq3s1kxHO2vrDdZG/qPz/jnp+/J5
W6J1TYhdmfarU22MoUJ34yt7NNQ/5iaCsA3HvVmT94bTHcUDsl5TcdLczJYO
j28kwIh4rreL5XoC90zHGTEkwZ7uc8u1r/wj5lep7nAddNPWvfg2NK9W6zKo
ZDdgy6EaMc/bXIyd2mZLb40Kjr5QWFSKsiUlckCHnM53SSheVJ73eBvfs7LN
dKFr+uJPSzbAAx9uNlMLpNHUyvWeOF/bRtccfd1S35asvFi4aN9iOVEqC7lL
HD47EEeVoq7Kt+axI2AINaLBlcnHIGxkawC/Vbqs5P1C8oeUhu7ORTqjuPG3
l/XjycOHd/PjSfbxSr7+5eYvHwZ9ecJhO5pyVdrm6cPpx6J8Of35ZF6+sA8H
J6/16evrDz+8/+H49U13PuOAW258UagZdPR/m5pM0eEQinmIdH7LmGPQDf78
221ALLe0wK2rS4icDn23U2l1up5EVxq57c96m6nf59T9evEvOTl7WL7Lf32+
Y1mHmDz1WPisnMvJP4/lh+uXPx799Pzk/N3lh3T2PJvdHGbvfnx7MbkyL7NX
72WvqL8VJXxrJv9/RRX/y/f/y/ccRu+2+N0dx+O7re5zF2ot7Q8k/EF81rlC
4ul1RyDujBwJQOWqdimADiB9du07Om5T/wqayGxX7f/1Nb/MdtX6/kqFu+Sg
1s8+2twWiaBN/j7hsIkGjnqz7LmJ15yquUTlxq0XqsjjY9WN44+VQG7c2dLO
dsjXCqV7TrVDLNQgpThH97jcnK8Q0BcF4uxxs5gPBtae13pRr5Hrf+VDcocy
/QF53Avb0q0IDcLojO2Jbom51t9Gq2zHouF+GZ9B8EWocOXE8U1YKWIR6RC+
Vi/dpTCwaRrfM5BTnfNZeyzjxVCoR45hfCDuCG47OD0NychSjsnrvmgp54bv
CW6xxhm3b3idcJqJoUvDNMttJkNEvG2PSU6j4xUQBYiat2rqnjIFUnc1ir/w
lyTvQszvBbRTqI4LgmBFs8os1u/yxWUCs0mNlikdnUaw2nWWei89LeO6Z0id
mrVzs10XjqIDv3ASvtbMD47Tx186N4YOD+aGdOp6TVv27dDIjV1PZwiCkm6B
SOtKhnBWuOnHHOLjOxT+yCaOpXwMFNpt/lYpWclVcIfuUcI2C0iSiXXhseeK
nLtX1DpY2lnR6dnZLF1iZnSxFHPn9IGeqxAx83wJvc2225HPc9wZLno7eWQf
fGhAAQBLkEWlK4tY0J3NKRUuNV1mAy0pYh5VKr7LuaSDNRuwzs72qwg3KFYH
c0NxVxvrHzmx+0fbjXr+FtDqrBT2EuwMKSuuSUGJWSxY6i71tyd+bsWby9P2
MgnMKp3T97mxrpC2KHwWyu/fxo27GPPeuZsS7ZpLDzOsyR85/dAO7rTKX2sW
L/pOq7jrnrlAQ0Y2SR8K85Sr7N7dGtywrtifxBO3cnO+ZmL4ZOdBXC4RIY7m
Fd0qleSeTOdbkFaDiLP0laxy+sX3FHTVpgpCdwilTXsp2bs4dT4ppkBI2db7
Dh2KGPl2yTrG5keSzv9lPvwPiKTWsXqy2w57otvfk0Ln4kzOZY5/7oSDD77c
9YmWsVegpEiJ72MCAycf6YjtXtEFtQeyhnuku3JPTNoglLuoRN+7dznf+Rm/
0IxwnSC6uOeOjXK+BNG9xBfMZwMATRtNDRi+mYKPC/aZEsnOXW8iS6EL6LO8
mc2SfwMOlUcjlTEAAA==

-->

</rfc>

