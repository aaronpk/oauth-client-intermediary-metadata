<?xml version="1.0" encoding="us-ascii"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.2.11 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC6749 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6749.xml">
<!ENTITY RFC7159 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7159.xml">
<!ENTITY RFC7591 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7591.xml">
<!ENTITY RFC7592 SYSTEM "https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7592.xml">
]>

<?rfc roc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>

<rfc ipr="trust200902" docName="draft-parecki-oauth-client-intermediary-metadata-00" category="std">

  <front>
    <title>OAuth 2.0 Client Intermediary Metadata</title>

    <author initials="A." surname="Parecki" fullname="Aaron Parecki">
      <organization>Okta</organization>
      <address>
        <email>aaron@parecki.com</email>
        <uri>https://aaronparecki.com</uri>
      </address>
    </author>

    <date year="2019" month="August" day="29"/>

    <area>Security Area</area>
    <workgroup>Open Authentication Protocol</workgroup>
    
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines a mechanism for including information about 
additional parties involved in an OAuth transaction by adding a new section
to the OAuth 2.0 Dynamic Client Registration request, as well as requires that
authorization servers surface this information to users during an OAuth transaction.</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>In some applications of OAuth, an OAuth client is acting on behalf of one or more
intermediary or user-facing applications, and is not the entity that the user has 
an established relationship with. In the traditional OAuth model, a client_id 
represents only one application, and so the consent screen lists just one third party: 
the OAuth client. In these cases, it is not appropriate to list only the actual 
OAuth client or only the user-facing application. Listing only the actual OAuth client 
would be confusing to the user, since the user does not have a relationship with this entity. 
Listing only the user-facing application would be inaccurate and misrepresent the 
situation, since the user would be unaware that their data is actually being handled 
by additional parties.</t>

<t>This specification extends <xref target="RFC7591"/> and <xref target="RFC7592"/> to define a mechanism for including information about the additional parties involved in an OAuth transaction by including information about the additional intermediaries as well as the user-facing application into the Dynamic Client Registration request. This specification also defines requirements of the OAuth authorization server to present this information about the additional parties in the OAuth consent screen during an OAuth transaction.</t>

</section>
<section anchor="notational-conventions" title="Notational Conventions">

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119"/>.</t>

<t>Unless otherwise noted, all the protocol parameter names and values 
are case sensitive.</t>

</section>
<section anchor="terminology" title="Terminology">

<t>In addition to the terms defined in referenced specifications, this document uses
the following terms:</t>

<t><list style="hanging">
  <t hangText='&quot;OAuth&quot;:'>
  In this document, "OAuth" refers to OAuth 2.0, <xref target="RFC6749"/>.</t>
  <t hangText='&quot;End User Application (EUA)&quot;:'>
  The software that the end user interacts with and has a relationship with, 
which is not the same as the OAuth client interacting with the Resource Server.</t>
  <t hangText='&quot;Intermediary&quot;:'>
  One or more entities that the user's data will pass through or be shared with by
using the OAuth client. This information is voluntarily provided by the OAuth 
client, and is typically enforced by a business relationship between the organization
providing the Client and the organization providing the Resource Server.</t>
  <t hangText='&quot;Client&quot;:'>
  "Client" has the same definition as in OAuth 2.0, but is worth pointing out explicitly 
here that the client in this case is requesting and obtaining permission from the user 
to access their resources while acting on behalf of the End User Application.</t>
</list></t>

</section>
<section anchor="end-user-application-and-intermediary-metadata" title="End User Application and Intermediary Metadata">

<t>Registered end user applications, as well as intermediaries, have a set of metadata values 
associated with the client identifier of the client that represents them in the OAuth transaction, 
such as a user-visible name, logo, and URL.</t>

<t>Like the OAuth client metadata defined in <xref target="RFC7591"/> and <xref target="RFC7592"/>, these metadata 
values are used in the following ways:</t>

<t><list style="symbols">
  <t>as input values to registration and update requests, and</t>
  <t>as output values in registration responses.</t>
</list></t>

<t>These values are used by the authorization server when displaying the OAuth consent
screen to the end user, to inform them of all the additional parties that will be handling
the user's data upon approval.</t>

<t>The following metadata fields are defined by this specification. The implementation and use of
the fields is OPTIONAL unless stated otherwise. All data member types (strings, arrays, numbers)
are defined in terms of their JSON (<xref target="RFC7159"/>) representations.</t>

<t>Some fields are expected to be displayed in the OAuth consent UI and are designated accordingly.</t>

<t><spanx style="verb">name</spanx></t>

<t>REQUIRED. A human-readable name of the end user application or intermediary. Authorization servers MUST display this field to the end user on the OAuth consent screen.</t>

<t><spanx style="verb">description</spanx></t>

<t>REQUIRED. A human-readable description of the end user application or intermediary. This is not intended to be displayed in the OAuth consent screen.</t>

<t><spanx style="verb">uri</spanx></t>

<t>A URL string of a web page providing information about the end user application or intermediary. If present, the authorization server SHOULD display this URL to the end user in a clickable fashion. It is RECOMMENDED that clients always send this field. The value of this field MUST point to a valid web page.</t>

<t><spanx style="verb">logo_uri</spanx></t>

<t>A URL string that references a logo for this end user application or intermediary. If present, the authorization server SHOULD display this image to the end user in the OAuth consent screen. The value of this field MUST be a valid image file.</t>

<t><spanx style="verb">contacts</spanx></t>

<t>Array of strings representing ways to contact people responsible for this end user application or intermediary, typically email addresses or phone numbers. The authorization server MAY display these to the end user in the OAuth consent screen. See Section 6 of <xref target="RFC7591"/> for information on Privacy Considerations.</t>

</section>
<section anchor="client-registration-endpoint" title="Client Registration Endpoint">

<t>The client registration endpoint is described in Section 3 of <xref target="RFC7591"/>.</t>

<t>Since this specification provides a mechanism for a client to assert user information about additional parties other than itself, the registration endpoint MUST be protected by an OAuth 2.0 access token obtained by the client. The method by which the initial access token is obtained by the client or developer is out of scope of this specification, but is likely to be obtained using the client credentials grant.</t>

<section anchor="client-registration-request" title="Client Registration Request">

<t>This specification extends the client registration request defined in <xref target="RFC7591"/>.</t>

<t>This operation registers a combination of client, end user application, and optionally one or more intermediaries with an authorization server. The authorization server assigns a unique client identifier (and optionally a client secret) that represents the combination of all the entities described in the registration request.</t>

<t>To register, the client or developer sends an HTTP POST as described in Section 3.1 of <xref target="RFC7591"/>, with an additional property named "end_user_application" containing a JSON object with the end user application registration information, and optionally a property named "intermediaries" with a JSON array of objects of each intermediary's registration information.</t>

<t>For example, the client could send the following registration request to the client registration endpoint using its OAuth 2.0 access token it has previously obtained using the client credentials grant.</t>

<t>The following is a non-normative example request:</t>

<figure><artwork><![CDATA[
    POST /register HTTP/1.1
    Content-Type: application/json
    Accept: application/json
    Host: server.example.com
    Authorization: Bearer 8IGFGXKXZBV5LL38Y3X1

    {
      "client_name": "My Example Client",
      "redirect_uris": [
        "https://client.example.org/callback"
      ],
      "logo_uri": "https://client.example.org/logo.png",
      "end_user_application": {
        "name": "User-Recognizable App Name",
        "description": "This application is what the user 
          is interacting with in their browser",
        "uri": "https://example.net/",
        "logo_uri": "https://example.net/logo.png",
        "contacts": [
          "support@example.net"
        ]
      },
      "intermediaries": [
        {
          "name": "Partner App Name",
          "description": "An application that may also receive 
            this user's data when the user authorizes the client",
          "uri": "https://partner.example/",
          "logo_uri": "https://partner.example/logo.png",
          "contacts": [
            "support@partner.example"
          ]
        }
      ]
    }
]]></artwork></figure>

</section>
<section anchor="client-registration-response" title="Client Registration Response">

<t>This specification extends the client information response defined in <xref target="RFC7591"/> and <xref target="RFC7592"/>.</t>

<t>Upon a successful registration request, the authorization server returns a client identifier for the combination of the client, end user application, and any intermediaries specified in the request.</t>

<t>In addition to the response fields defined in Section 3.2 of <xref target="RFC7591"/> and Section 3 of <xref target="RFC7592"/>, the response MUST also contain all registered metadata about the end user application and any intermediaries. The authorization server MAY reject or replace any of the requested metadata values submitted during the registration and substitute them with suitable values.</t>

<t>The following is a non-normative example response of a successful registration:</t>

<figure><artwork><![CDATA[
    HTTP/1.1 201 Created
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {
      "client_id": "V8tvEkZWhDAdxSaKGUJZ",
      "client_secret": "SpsuwZIxnp8bBEhp5sk1EKiIKTZ4X4DKU",
      "grant_types": ["authorization_code", "refresh_token"],
      "token_endpoint_auth_method": "client_secret_basic",
      "registration_client_uri": "https://server.example.com/client/tmzaAMkyWlH3",
      "registration_access_token": "MphaAqDaZT86C93ENWRZcf3dfU2dW6POASo8dFXa",
      "client_name": "My Example Client",
      "redirect_uris": [
        "https://client.example.org/callback"
      ],
      "logo_uri": "https://client.example.org/logo.png",
      "end_user_application": {
        "name": "User-Recognizable App Name",
        "description": "This application is what the user is interacting 
          with in their browser",
        "uri": "https://example.net/",
        "logo_uri": "https://example.net/logo.png",
        "contacts": [
          "support@example.net"
        ]
      },
      "intermediaries": [
        {
          "name": "Partner App Name",
          "description": "An application that may also receive 
            this user's data when the user authorizes the client",
          "uri": "https://partner.example/",
          "logo_uri": "https://partner.example/logo.png",
          "contacts": [
            "support@partner.example"
          ]
        }
      ]
    }
]]></artwork></figure>

<t>The <spanx style="verb">registration_client_uri</spanx> and <spanx style="verb">registration_access_token</spanx> properties are required in order to support updating and deleting this client as described in <xref target="RFC7592"/>.</t>

</section>
<section anchor="client-read-request" title="Client Read Request">

<t>This specification extends the client read request defined in <xref target="RFC7592"/> to include the additional metadata properties in the response that describe the end user application and intermediaries. No additional behavior is prescribed by this specification.</t>

</section>
<section anchor="client-update-request" title="Client Update Request">

<t>This specification extends the client update request defined in <xref target="RFC7592"/> to be able to update the additional metadata properties that describe the end user application and intermediaries.</t>

<t>The additional properties are provided in the update request in the same format as in the initial registration request.</t>

<t>Since these values were asserted by the client in the initial registration, there is no need to prescribe any additional security model around the ability to update them, even though these represent additional parties.</t>

</section>
<section anchor="client-delete-request" title="Client Delete Request">

<t>No new behavior is prescribed for delete requests beyond that defined in <xref target="RFC7592"/>.</t>

</section>
</section>
<section anchor="providing-end-user-application-details-in-the-authorization-request" title="Providing End-User Application Details in the Authorization Request">

<t>When the authorization server begins a request from an OAuth client identifier that has been registered with additional end user application or intermediary information, it MUST display the additional parties in the consent UI visible to the end user.</t>

<t>The authorization server MAY choose to emphasize or make the end user application information the primary information displayed in the consent screen. This is because the end user application is likely the most recognizable entity to the end user, and the end user may not be aware that it is actually a different organization's OAuth client that is the one making requests for the user's data.</t>

<t>The authorization server chooses how best to display the additional information, but it MUST include at least the name of the end user application, intermediaries, and client, and SHOULD include the logo of each as well.</t>

<t>Once an access token has been issued to this client, the client uses the access token to make requests at the resource server on behalf of the specific end user application on behalf of the end user.</t>

</section>
<section anchor="acknowledgements" title="Acknowledgements">

<t>The authors would like to thank Ryan Christiansen and Preston McFarland for their initial contributions of the concepts behind this specification. The authors would also like to thank the OAuth Working Group for their work on the referenced and related specifications that this specification builds upon.</t>

</section>


  </middle>

  <back>

    <references title='Normative References'>

&RFC2119;
&RFC6749;
&RFC7159;
&RFC7591;
&RFC7592;


    </references>




  </back>

<!-- ##markdown-source:
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

-->

</rfc>

